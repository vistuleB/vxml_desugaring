import gleam/option.{Some}
import gleam/regexp.{type Regexp}
import gleam/string.{inspect as ins}
import infrastructure.{type Desugarer, type Desugarer, Desugarer} as infra

type Extras =
  #(List(#(Regexp, String)), List(String))

fn transform_factory(extras: Extras) -> infra.NodeToNodesFancyTransform {
  let #(regexes_and_tags, forbidden_parents) = extras
  infra.replace_regexes_by_tags_param_transform(_, regexes_and_tags)
  |> infra.prevent_node_to_nodes_transform_inside(forbidden_parents)
}

fn desugarer_factory(extras: Extras) -> Desugarer {
  infra.node_to_nodes_fancy_desugarer_factory(transform_factory(extras))
}

pub fn split_by_regexes(extras: Extras) -> Desugarer {
  Desugarer(
    description: DesugarerDescription(
      "split_by_regexes",
      Some(ins(extras)),
      "...",
    ),
    desugarer: desugarer_factory(extras),
  )
}
